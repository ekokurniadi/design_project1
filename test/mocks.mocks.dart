// Mocks generated by Mockito 5.4.4 from annotations
// in flutter_pos/test/mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i9;

import 'package:dartz/dartz.dart' as _i7;
import 'package:dio/dio.dart' as _i10;
import 'package:dio/src/adapter.dart' as _i3;
import 'package:dio/src/cancel_token.dart' as _i11;
import 'package:dio/src/dio_mixin.dart' as _i5;
import 'package:dio/src/options.dart' as _i2;
import 'package:dio/src/response.dart' as _i6;
import 'package:dio/src/transformer.dart' as _i4;
import 'package:flutter_pos/core/config/database/realm_database.dart' as _i19;
import 'package:flutter_pos/core/errors/failures.dart' as _i13;
import 'package:flutter_pos/modules/ronpos/features/dashboard/data/datasources/local/dashboard_local_datasource.dart'
    as _i15;
import 'package:flutter_pos/modules/ronpos/features/dashboard/data/datasources/remote/dashboard_remote_datasource.dart'
    as _i12;
import 'package:flutter_pos/modules/ronpos/features/dashboard/data/models/dashboard_model.codegen.dart'
    as _i14;
import 'package:flutter_pos/modules/ronpos/features/dashboard/domain/repository/dashboard_repository.dart'
    as _i16;
import 'package:flutter_pos/modules/ronpos/features/dashboard/domain/usecases/get_dashboard_data_from_remote_usecase.dart'
    as _i17;
import 'package:flutter_pos/modules/ronpos/features/dashboard/domain/usecases/get_dashboard_data_usecase.dart'
    as _i18;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i20;
import 'package:realm/realm.dart' as _i8;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeBaseOptions_0 extends _i1.SmartFake implements _i2.BaseOptions {
  _FakeBaseOptions_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeHttpClientAdapter_1 extends _i1.SmartFake
    implements _i3.HttpClientAdapter {
  _FakeHttpClientAdapter_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTransformer_2 extends _i1.SmartFake implements _i4.Transformer {
  _FakeTransformer_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeInterceptors_3 extends _i1.SmartFake implements _i5.Interceptors {
  _FakeInterceptors_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponse_4<T1> extends _i1.SmartFake implements _i6.Response<T1> {
  _FakeResponse_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEither_5<L, R> extends _i1.SmartFake implements _i7.Either<L, R> {
  _FakeEither_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDynamicRealm_6 extends _i1.SmartFake implements _i8.DynamicRealm {
  _FakeDynamicRealm_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeConfiguration_7 extends _i1.SmartFake implements _i8.Configuration {
  _FakeConfiguration_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRealmSchema_8 extends _i1.SmartFake implements _i8.RealmSchema {
  _FakeRealmSchema_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTransaction_9 extends _i1.SmartFake implements _i8.Transaction {
  _FakeTransaction_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFuture_10<T1> extends _i1.SmartFake implements _i9.Future<T1> {
  _FakeFuture_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRealmResults_11<T1 extends Object?> extends _i1.SmartFake
    implements _i8.RealmResults<T1> {
  _FakeRealmResults_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRealm_12 extends _i1.SmartFake implements _i8.Realm {
  _FakeRealm_12(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [Dio].
///
/// See the documentation for Mockito's code generation for more information.
class MockDio extends _i1.Mock implements _i10.Dio {
  MockDio() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.BaseOptions get options => (super.noSuchMethod(
        Invocation.getter(#options),
        returnValue: _FakeBaseOptions_0(
          this,
          Invocation.getter(#options),
        ),
      ) as _i2.BaseOptions);

  @override
  set options(_i2.BaseOptions? _options) => super.noSuchMethod(
        Invocation.setter(
          #options,
          _options,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.HttpClientAdapter get httpClientAdapter => (super.noSuchMethod(
        Invocation.getter(#httpClientAdapter),
        returnValue: _FakeHttpClientAdapter_1(
          this,
          Invocation.getter(#httpClientAdapter),
        ),
      ) as _i3.HttpClientAdapter);

  @override
  set httpClientAdapter(_i3.HttpClientAdapter? _httpClientAdapter) =>
      super.noSuchMethod(
        Invocation.setter(
          #httpClientAdapter,
          _httpClientAdapter,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.Transformer get transformer => (super.noSuchMethod(
        Invocation.getter(#transformer),
        returnValue: _FakeTransformer_2(
          this,
          Invocation.getter(#transformer),
        ),
      ) as _i4.Transformer);

  @override
  set transformer(_i4.Transformer? _transformer) => super.noSuchMethod(
        Invocation.setter(
          #transformer,
          _transformer,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Interceptors get interceptors => (super.noSuchMethod(
        Invocation.getter(#interceptors),
        returnValue: _FakeInterceptors_3(
          this,
          Invocation.getter(#interceptors),
        ),
      ) as _i5.Interceptors);

  @override
  void close({bool? force = false}) => super.noSuchMethod(
        Invocation.method(
          #close,
          [],
          {#force: force},
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i9.Future<_i6.Response<T>> head<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i2.Options? options,
    _i11.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #head,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
          },
        ),
        returnValue: _i9.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #head,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
      ) as _i9.Future<_i6.Response<T>>);

  @override
  _i9.Future<_i6.Response<T>> headUri<T>(
    Uri? uri, {
    Object? data,
    _i2.Options? options,
    _i11.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #headUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
          },
        ),
        returnValue: _i9.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #headUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
      ) as _i9.Future<_i6.Response<T>>);

  @override
  _i9.Future<_i6.Response<T>> get<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i2.Options? options,
    _i11.CancelToken? cancelToken,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i9.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #get,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i9.Future<_i6.Response<T>>);

  @override
  _i9.Future<_i6.Response<T>> getUri<T>(
    Uri? uri, {
    Object? data,
    _i2.Options? options,
    _i11.CancelToken? cancelToken,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i9.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #getUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i9.Future<_i6.Response<T>>);

  @override
  _i9.Future<_i6.Response<T>> post<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i2.Options? options,
    _i11.CancelToken? cancelToken,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i9.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #post,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i9.Future<_i6.Response<T>>);

  @override
  _i9.Future<_i6.Response<T>> postUri<T>(
    Uri? uri, {
    Object? data,
    _i2.Options? options,
    _i11.CancelToken? cancelToken,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #postUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i9.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #postUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i9.Future<_i6.Response<T>>);

  @override
  _i9.Future<_i6.Response<T>> put<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i2.Options? options,
    _i11.CancelToken? cancelToken,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i9.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #put,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i9.Future<_i6.Response<T>>);

  @override
  _i9.Future<_i6.Response<T>> putUri<T>(
    Uri? uri, {
    Object? data,
    _i2.Options? options,
    _i11.CancelToken? cancelToken,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #putUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i9.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #putUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i9.Future<_i6.Response<T>>);

  @override
  _i9.Future<_i6.Response<T>> patch<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i2.Options? options,
    _i11.CancelToken? cancelToken,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patch,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i9.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #patch,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i9.Future<_i6.Response<T>>);

  @override
  _i9.Future<_i6.Response<T>> patchUri<T>(
    Uri? uri, {
    Object? data,
    _i2.Options? options,
    _i11.CancelToken? cancelToken,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patchUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i9.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #patchUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i9.Future<_i6.Response<T>>);

  @override
  _i9.Future<_i6.Response<T>> delete<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i2.Options? options,
    _i11.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
          },
        ),
        returnValue: _i9.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #delete,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
      ) as _i9.Future<_i6.Response<T>>);

  @override
  _i9.Future<_i6.Response<T>> deleteUri<T>(
    Uri? uri, {
    Object? data,
    _i2.Options? options,
    _i11.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
          },
        ),
        returnValue: _i9.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #deleteUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
      ) as _i9.Future<_i6.Response<T>>);

  @override
  _i9.Future<_i6.Response<dynamic>> download(
    String? urlPath,
    dynamic savePath, {
    _i2.ProgressCallback? onReceiveProgress,
    Map<String, dynamic>? queryParameters,
    _i11.CancelToken? cancelToken,
    bool? deleteOnError = true,
    String? lengthHeader = r'content-length',
    Object? data,
    _i2.Options? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #download,
          [
            urlPath,
            savePath,
          ],
          {
            #onReceiveProgress: onReceiveProgress,
            #queryParameters: queryParameters,
            #cancelToken: cancelToken,
            #deleteOnError: deleteOnError,
            #lengthHeader: lengthHeader,
            #data: data,
            #options: options,
          },
        ),
        returnValue:
            _i9.Future<_i6.Response<dynamic>>.value(_FakeResponse_4<dynamic>(
          this,
          Invocation.method(
            #download,
            [
              urlPath,
              savePath,
            ],
            {
              #onReceiveProgress: onReceiveProgress,
              #queryParameters: queryParameters,
              #cancelToken: cancelToken,
              #deleteOnError: deleteOnError,
              #lengthHeader: lengthHeader,
              #data: data,
              #options: options,
            },
          ),
        )),
      ) as _i9.Future<_i6.Response<dynamic>>);

  @override
  _i9.Future<_i6.Response<dynamic>> downloadUri(
    Uri? uri,
    dynamic savePath, {
    _i2.ProgressCallback? onReceiveProgress,
    _i11.CancelToken? cancelToken,
    bool? deleteOnError = true,
    String? lengthHeader = r'content-length',
    Object? data,
    _i2.Options? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #downloadUri,
          [
            uri,
            savePath,
          ],
          {
            #onReceiveProgress: onReceiveProgress,
            #cancelToken: cancelToken,
            #deleteOnError: deleteOnError,
            #lengthHeader: lengthHeader,
            #data: data,
            #options: options,
          },
        ),
        returnValue:
            _i9.Future<_i6.Response<dynamic>>.value(_FakeResponse_4<dynamic>(
          this,
          Invocation.method(
            #downloadUri,
            [
              uri,
              savePath,
            ],
            {
              #onReceiveProgress: onReceiveProgress,
              #cancelToken: cancelToken,
              #deleteOnError: deleteOnError,
              #lengthHeader: lengthHeader,
              #data: data,
              #options: options,
            },
          ),
        )),
      ) as _i9.Future<_i6.Response<dynamic>>);

  @override
  _i9.Future<_i6.Response<T>> request<T>(
    String? url, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i11.CancelToken? cancelToken,
    _i2.Options? options,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #request,
          [url],
          {
            #data: data,
            #queryParameters: queryParameters,
            #cancelToken: cancelToken,
            #options: options,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i9.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #request,
            [url],
            {
              #data: data,
              #queryParameters: queryParameters,
              #cancelToken: cancelToken,
              #options: options,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i9.Future<_i6.Response<T>>);

  @override
  _i9.Future<_i6.Response<T>> requestUri<T>(
    Uri? uri, {
    Object? data,
    _i11.CancelToken? cancelToken,
    _i2.Options? options,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #requestUri,
          [uri],
          {
            #data: data,
            #cancelToken: cancelToken,
            #options: options,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i9.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #requestUri,
            [uri],
            {
              #data: data,
              #cancelToken: cancelToken,
              #options: options,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i9.Future<_i6.Response<T>>);

  @override
  _i9.Future<_i6.Response<T>> fetch<T>(_i2.RequestOptions? requestOptions) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetch,
          [requestOptions],
        ),
        returnValue: _i9.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #fetch,
            [requestOptions],
          ),
        )),
      ) as _i9.Future<_i6.Response<T>>);
}

/// A class which mocks [DashboardRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockDashboardRemoteDataSource extends _i1.Mock
    implements _i12.DashboardRemoteDataSource {
  MockDashboardRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.Future<_i7.Either<_i13.Failures, _i14.DashboardModel>> getDashboardData(
          int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDashboardData,
          [id],
        ),
        returnValue:
            _i9.Future<_i7.Either<_i13.Failures, _i14.DashboardModel>>.value(
                _FakeEither_5<_i13.Failures, _i14.DashboardModel>(
          this,
          Invocation.method(
            #getDashboardData,
            [id],
          ),
        )),
      ) as _i9.Future<_i7.Either<_i13.Failures, _i14.DashboardModel>>);
}

/// A class which mocks [DashboardLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockDashboardLocalDataSource extends _i1.Mock
    implements _i15.DashboardLocalDataSource {
  MockDashboardLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.Future<_i7.Either<_i13.Failures, _i14.DashboardModel>> getDashboardData(
          int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDashboardData,
          [id],
        ),
        returnValue:
            _i9.Future<_i7.Either<_i13.Failures, _i14.DashboardModel>>.value(
                _FakeEither_5<_i13.Failures, _i14.DashboardModel>(
          this,
          Invocation.method(
            #getDashboardData,
            [id],
          ),
        )),
      ) as _i9.Future<_i7.Either<_i13.Failures, _i14.DashboardModel>>);
}

/// A class which mocks [DashboardRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockDashboardRepository extends _i1.Mock
    implements _i16.DashboardRepository {
  MockDashboardRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.Future<_i7.Either<_i13.Failures, _i14.DashboardModel>> getDashboardData(
          int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDashboardData,
          [id],
        ),
        returnValue:
            _i9.Future<_i7.Either<_i13.Failures, _i14.DashboardModel>>.value(
                _FakeEither_5<_i13.Failures, _i14.DashboardModel>(
          this,
          Invocation.method(
            #getDashboardData,
            [id],
          ),
        )),
      ) as _i9.Future<_i7.Either<_i13.Failures, _i14.DashboardModel>>);

  @override
  _i9.Future<_i7.Either<_i13.Failures, _i14.DashboardModel>>
      getDashboardDataFromRemote(int? id) => (super.noSuchMethod(
            Invocation.method(
              #getDashboardDataFromRemote,
              [id],
            ),
            returnValue: _i9
                .Future<_i7.Either<_i13.Failures, _i14.DashboardModel>>.value(
                _FakeEither_5<_i13.Failures, _i14.DashboardModel>(
              this,
              Invocation.method(
                #getDashboardDataFromRemote,
                [id],
              ),
            )),
          ) as _i9.Future<_i7.Either<_i13.Failures, _i14.DashboardModel>>);
}

/// A class which mocks [GetDashboardDataFromRemoteUsecase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetDashboardDataFromRemoteUsecase extends _i1.Mock
    implements _i17.GetDashboardDataFromRemoteUsecase {
  MockGetDashboardDataFromRemoteUsecase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.Future<_i7.Either<_i13.Failures, _i14.DashboardModel>> call(
          int? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue:
            _i9.Future<_i7.Either<_i13.Failures, _i14.DashboardModel>>.value(
                _FakeEither_5<_i13.Failures, _i14.DashboardModel>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i9.Future<_i7.Either<_i13.Failures, _i14.DashboardModel>>);
}

/// A class which mocks [GetDashboardDataUsecase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetDashboardDataUsecase extends _i1.Mock
    implements _i18.GetDashboardDataUsecase {
  MockGetDashboardDataUsecase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.Future<_i7.Either<_i13.Failures, _i14.DashboardModel>> call(
          int? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue:
            _i9.Future<_i7.Either<_i13.Failures, _i14.DashboardModel>>.value(
                _FakeEither_5<_i13.Failures, _i14.DashboardModel>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i9.Future<_i7.Either<_i13.Failures, _i14.DashboardModel>>);
}

/// A class which mocks [RealmDatabase].
///
/// See the documentation for Mockito's code generation for more information.
class MockRealmDatabase extends _i1.Mock implements _i19.RealmDatabase {
  MockRealmDatabase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<T> getAll<T extends _i8.RealmObject>() => (super.noSuchMethod(
        Invocation.method(
          #getAll,
          [],
        ),
        returnValue: <T>[],
      ) as List<T>);

  @override
  _i9.Future<_i7.Either<_i13.Failures, T>> add<T extends _i8.RealmObject>(
          T? item) =>
      (super.noSuchMethod(
        Invocation.method(
          #add,
          [item],
        ),
        returnValue: _i9.Future<_i7.Either<_i13.Failures, T>>.value(
            _FakeEither_5<_i13.Failures, T>(
          this,
          Invocation.method(
            #add,
            [item],
          ),
        )),
      ) as _i9.Future<_i7.Either<_i13.Failures, T>>);

  @override
  _i9.Future<void> addList<T extends _i8.RealmObject>(Iterable<T>? items) =>
      (super.noSuchMethod(
        Invocation.method(
          #addList,
          [items],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<_i7.Either<_i13.Failures, T>> update<T extends _i8.RealmObject>(
          T? item) =>
      (super.noSuchMethod(
        Invocation.method(
          #update,
          [item],
        ),
        returnValue: _i9.Future<_i7.Either<_i13.Failures, T>>.value(
            _FakeEither_5<_i13.Failures, T>(
          this,
          Invocation.method(
            #update,
            [item],
          ),
        )),
      ) as _i9.Future<_i7.Either<_i13.Failures, T>>);

  @override
  _i9.Future<void> delete<T extends _i8.RealmObject>(T? item) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [item],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  T? find<T extends _i8.RealmObject, Param>(Param? primaryKey) =>
      (super.noSuchMethod(Invocation.method(
        #find,
        [primaryKey],
      )) as T?);

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [Realm].
///
/// See the documentation for Mockito's code generation for more information.
class MockRealm extends _i1.Mock implements _i8.Realm {
  MockRealm() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.DynamicRealm get dynamic => (super.noSuchMethod(
        Invocation.getter(#dynamic),
        returnValue: _FakeDynamicRealm_6(
          this,
          Invocation.getter(#dynamic),
        ),
      ) as _i8.DynamicRealm);

  @override
  _i8.Configuration get config => (super.noSuchMethod(
        Invocation.getter(#config),
        returnValue: _FakeConfiguration_7(
          this,
          Invocation.getter(#config),
        ),
      ) as _i8.Configuration);

  @override
  _i8.RealmSchema get schema => (super.noSuchMethod(
        Invocation.getter(#schema),
        returnValue: _FakeRealmSchema_8(
          this,
          Invocation.getter(#schema),
        ),
      ) as _i8.RealmSchema);

  @override
  set schema(_i8.RealmSchema? _schema) => super.noSuchMethod(
        Invocation.setter(
          #schema,
          _schema,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get isFrozen => (super.noSuchMethod(
        Invocation.getter(#isFrozen),
        returnValue: false,
      ) as bool);

  @override
  bool get isInTransaction => (super.noSuchMethod(
        Invocation.getter(#isInTransaction),
        returnValue: false,
      ) as bool);

  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);

  @override
  T add<T extends _i8.RealmObject>(
    T? object, {
    bool? update = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #add,
          [object],
          {#update: update},
        ),
        returnValue: _i20.dummyValue<T>(
          this,
          Invocation.method(
            #add,
            [object],
            {#update: update},
          ),
        ),
      ) as T);

  @override
  void addAll<T extends _i8.RealmObject>(
    Iterable<T>? items, {
    bool? update = false,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #addAll,
          [items],
          {#update: update},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void delete<T extends _i8.RealmObjectBase>(T? object) => super.noSuchMethod(
        Invocation.method(
          #delete,
          [object],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void deleteMany<T extends _i8.RealmObject>(Iterable<T>? items) =>
      super.noSuchMethod(
        Invocation.method(
          #deleteMany,
          [items],
        ),
        returnValueForMissingStub: null,
      );

  @override
  T write<T>(T Function()? writeCallback) => (super.noSuchMethod(
        Invocation.method(
          #write,
          [writeCallback],
        ),
        returnValue: _i20.dummyValue<T>(
          this,
          Invocation.method(
            #write,
            [writeCallback],
          ),
        ),
      ) as T);

  @override
  _i8.Transaction beginWrite() => (super.noSuchMethod(
        Invocation.method(
          #beginWrite,
          [],
        ),
        returnValue: _FakeTransaction_9(
          this,
          Invocation.method(
            #beginWrite,
            [],
          ),
        ),
      ) as _i8.Transaction);

  @override
  _i9.Future<_i8.Transaction> beginWriteAsync(
          [_i8.CancellationToken? cancellationToken]) =>
      (super.noSuchMethod(
        Invocation.method(
          #beginWriteAsync,
          [cancellationToken],
        ),
        returnValue: _i9.Future<_i8.Transaction>.value(_FakeTransaction_9(
          this,
          Invocation.method(
            #beginWriteAsync,
            [cancellationToken],
          ),
        )),
      ) as _i9.Future<_i8.Transaction>);

  @override
  _i9.Future<T> writeAsync<T>(
    T Function()? writeCallback, [
    _i8.CancellationToken? cancellationToken,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #writeAsync,
          [
            writeCallback,
            cancellationToken,
          ],
        ),
        returnValue: _i20.ifNotNull(
              _i20.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #writeAsync,
                  [
                    writeCallback,
                    cancellationToken,
                  ],
                ),
              ),
              (T v) => _i9.Future<T>.value(v),
            ) ??
            _FakeFuture_10<T>(
              this,
              Invocation.method(
                #writeAsync,
                [
                  writeCallback,
                  cancellationToken,
                ],
              ),
            ),
      ) as _i9.Future<T>);

  @override
  void close() => super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i8.RealmResults<T> all<T extends _i8.RealmObject>() => (super.noSuchMethod(
        Invocation.method(
          #all,
          [],
        ),
        returnValue: _FakeRealmResults_11<T>(
          this,
          Invocation.method(
            #all,
            [],
          ),
        ),
      ) as _i8.RealmResults<T>);

  @override
  _i8.RealmResults<T> query<T extends _i8.RealmObject>(
    String? query, [
    List<Object?>? args = const [],
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #query,
          [
            query,
            args,
          ],
        ),
        returnValue: _FakeRealmResults_11<T>(
          this,
          Invocation.method(
            #query,
            [
              query,
              args,
            ],
          ),
        ),
      ) as _i8.RealmResults<T>);

  @override
  void deleteAll<T extends _i8.RealmObject>() => super.noSuchMethod(
        Invocation.method(
          #deleteAll,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i8.Realm freeze() => (super.noSuchMethod(
        Invocation.method(
          #freeze,
          [],
        ),
        returnValue: _FakeRealm_12(
          this,
          Invocation.method(
            #freeze,
            [],
          ),
        ),
      ) as _i8.Realm);

  @override
  void writeCopy(_i8.Configuration? config) => super.noSuchMethod(
        Invocation.method(
          #writeCopy,
          [config],
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool refresh() => (super.noSuchMethod(
        Invocation.method(
          #refresh,
          [],
        ),
        returnValue: false,
      ) as bool);

  @override
  _i9.Future<bool> refreshAsync() => (super.noSuchMethod(
        Invocation.method(
          #refreshAsync,
          [],
        ),
        returnValue: _i9.Future<bool>.value(false),
      ) as _i9.Future<bool>);

  @override
  void disableAutoRefreshForTesting() => super.noSuchMethod(
        Invocation.method(
          #disableAutoRefreshForTesting,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
